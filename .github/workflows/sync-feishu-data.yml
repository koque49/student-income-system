name: 同步飞书数据

on:
  schedule:
    - cron: '0 0 * * *'  # 每天北京时间8点
  workflow_dispatch:     # 手动触发
  push:
    branches: [ main ]

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # 重要：写入权限
      
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 创建数据目录
        run: |
          mkdir -p data
          echo "✅ 数据目录创建完成"
          
      - name: 获取飞书令牌
        id: token
        run: |
          echo "🔐 获取飞书访问令牌..."
          
          response=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST \
            "https://open.feishu.cn/open-apis/auth/v3/tenant_access_token/internal" \
            -H "Content-Type: application/json" \
            -d '{"app_id":"cli_a84a4855cb36500b","app_secret":"NJxiXZAZLLZcVJ2Mh9dzmb0W8vioZNRM"}')
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          body=$(echo $response | sed -e 's/HTTPSTATUS\:.*//g')
          
          echo "HTTP状态码: $http_code"
          echo "响应内容: $body"
          
          if [ $http_code -ne 200 ]; then
            echo "❌ HTTP请求失败，状态码: $http_code"
            exit 1
          fi
          
          token=$(echo $body | grep -o '"tenant_access_token":"[^"]*' | cut -d'"' -f4)
          
          if [ -z "$token" ]; then
            echo "❌ 无法提取访问令牌"
            echo "响应: $body"
            exit 1
          fi
          
          echo "✅ 令牌获取成功"
          echo "token=$token" >> $GITHUB_OUTPUT
          
      - name: 获取表格数据
        run: |
          echo "📊 获取飞书表格数据..."
          
          response=$(curl -s -w "HTTPSTATUS:%{http_code}" -X GET \
            "https://open.feishu.cn/open-apis/sheets/v4/spreadsheets/Je42sildNh5sJAtktSlc0azDnsb/values/R6PBsw!A1:E1000" \
            -H "Authorization: Bearer ${{ steps.token.outputs.token }}")
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          body=$(echo $response | sed -e 's/HTTPSTATUS\:.*//g')
          
          echo "数据API状态码: $http_code"
          
          if [ $http_code -ne 200 ]; then
            echo "❌ 数据获取失败，状态码: $http_code"
            echo "响应: $body"
            exit 1
          fi
          
          # 保存数据
          echo $body > data/feishu-response.json
          
          # 检查数据格式
          code=$(echo $body | grep -o '"code":[^,]*' | cut -d':' -f2)
          
          if [ "$code" != "0" ]; then
            echo "❌ 飞书API返回错误"
            echo "响应: $body"
            exit 1
          fi
          
          # 提取values数组
          echo $body | sed 's/.*"values":\[\([^]]*\)\].*/[\1]/' > data/income-data.json
          
          # 创建同步报告
          cat > data/sync-report.json << EOF
          {
            "lastSync": "$(date '+%Y-%m-%d %H:%M:%S')",
            "status": "success",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          EOF
          
          echo "✅ 数据获取成功"
          
      - name: 提交数据
        run: |
          echo "💾 提交数据更新..."
          
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          
          git add data/
          
          if git diff --staged --quiet; then
            echo "📊 数据无变更"
          else
            git commit -m "🔄 自动同步数据 $(date '+%Y-%m-%d %H:%M:%S')"
            git push
            echo "✅ 数据已更新"
          fi
